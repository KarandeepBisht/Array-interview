/*package whatever //do not write package name here */
import java.util.Stack;
import java.io.*;

class GFG {
    static class Node{
        int data;
        Node left;
        Node right;
        public Node(int key){
            data = key;
            left= right= null;
        }
        
    }
    // public static void inorder(Node root){
    //     if(root == null){
    //         return;
    //     }
    //     inorder(root.left);
    //     System.out.print(root.data+" ");
    //     inorder(root.right);
    // }
    
    Iterative Implementation
    public static void inorder(Node root){
        Stack<Node> stk= new Stack<>();
        Node curr = root;
        while(!stk.empty() || curr!= null){
            if(curr != null){
                stk.push(curr);
                curr=curr.left;
            }
            else{
                curr = stk.pop();
                System.out.print(curr.data+" ");
                curr = curr.right;
            }
        }
    }
	public static void main (String[] args) {
	   Node root= new Node(1);
	   root.left = new Node(2);
	   root.right = new Node(3);
	   root.left.left= new Node(4);
	   root.right.left= new Node(5);
	   root.right.right= new Node(6);
	   root.right.left.left= new Node(7);
	   root.right.left.right= new Node(8);
	   inorder(root);
	   }
}
