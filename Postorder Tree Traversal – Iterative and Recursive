/*package whatever //do not write package name here */
import java.util.Stack;
import java.io.*;
class GFG {
static class Node
{
    int data;
     Node left, right;
     public Node(int key){
         data = key;
         left = right = null;
     }
}

    // public static void postorder(Node root){
    //     if(root == null ){
    //         return;
    //     }
    //     postorder(root.left);
    //     postorder(root.right);
    //     System.out.print(root.data + " ");
    // }
    
    public static void postorder(Node root){
        if(root==null){
            return;
        }
       
        // create an empty stack and push the root node
        Stack<Node> stack = new Stack<>();
        stack.push(root);
    
        // create another stack to store postorder traversal
        Stack<Integer> out = new Stack<>();
    
        // loop till stack is empty
        while (!stack.empty())
        {
            // pop a node from the stack and push the data into the output stack
            Node curr = stack.pop();
            out.push(curr.data);
    
            // push the left and right child of the popped node into the stack
            if (curr.left != null) {
                stack.push(curr.left);
            }
    
            if (curr.right != null) {
                stack.push(curr.right);
            }
        }
    
        // print postorder traversal
        while (!out.empty()) {
            System.out.print(out.pop() + " ");
        }
    }
    
	public static void main(String[] args) {
	    Node root = new Node(1);
	    root.left = new Node(2);
	    root.right = new Node(3);
	    root.left.left = new Node(4);
	    root.right.left = new Node(5);
	    root.right.right = new Node(6);
	    root.right.left.left = new Node(7);
	    root.right.left.right= new Node(8);
	    postorder(root);
	}
}
